<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>chilo-hzl&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.chilo-hzl.cn/"/>
  <updated>2020-03-08T09:56:38.026Z</updated>
  <id>https://www.chilo-hzl.cn/</id>
  
  <author>
    <name>chilo-hzl</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何用JavaScript将数据渲染成表格</title>
    <link href="https://www.chilo-hzl.cn/2020/03/08/%E5%A6%82%E4%BD%95%E7%94%A8JavaScript%E5%B0%86%E6%95%B0%E6%8D%AE%E6%B8%B2%E6%9F%93%E6%88%90%E8%A1%A8%E6%A0%BC/"/>
    <id>https://www.chilo-hzl.cn/2020/03/08/%E5%A6%82%E4%BD%95%E7%94%A8JavaScript%E5%B0%86%E6%95%B0%E6%8D%AE%E6%B8%B2%E6%9F%93%E6%88%90%E8%A1%A8%E6%A0%BC/</id>
    <published>2020-03-08T07:51:30.000Z</published>
    <updated>2020-03-08T09:56:38.026Z</updated>
    
    <content type="html"><![CDATA[<!--excerpt--><p><strong>表格呈现的数据往往比较清晰，所以大多数我们的商品交易信息都会以表格的形式呈现出来让商家和物流中心的人高效处理交易</strong></p><p><strong>如果你只是想打印一个简单的表格，那么你参考这篇文章就可以了：<a href="https://jingyan.baidu.com/album/f79b7cb327aaee9144023e93.html?picindex=2" target="_blank" rel="noopener">网址链接</a></strong></p><p><strong>下面我将告诉你如何渲染一个比较复杂的表格，效果图如下</strong></p><img src="/2020/03/08/%E5%A6%82%E4%BD%95%E7%94%A8JavaScript%E5%B0%86%E6%95%B0%E6%8D%AE%E6%B8%B2%E6%9F%93%E6%88%90%E8%A1%A8%E6%A0%BC/appearance.jpg" class=""><p><strong>代码实现如下（我会在代码上你们可能不懂的地方加上注释）</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=<span class="string">"container"</span>&gt;&lt;<span class="regexp">/div&gt; /</span><span class="regexp">/JS数据会渲染在这个地方</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/下面代码中detailList嵌套数组，最内层数组第一个参数是商品名称，第二个参数是数量，第三个参数是商品属性</span></span><br><span class="line"><span class="regexp">var arr=[</span></span><br><span class="line"><span class="regexp">&#123;</span></span><br><span class="line"><span class="regexp">"songda_time":"2019.07.09",</span></span><br><span class="line"><span class="regexp">"mobile":"18811359312",</span></span><br><span class="line"><span class="regexp">"code":"APP",</span></span><br><span class="line"><span class="regexp">"consignee":"张三",</span></span><br><span class="line"><span class="regexp">"building_number":"25",</span></span><br><span class="line"><span class="regexp">"school":"宁夏医科大学",</span></span><br><span class="line"><span class="regexp">"detailList":[["精选套餐A+学生宿舍基本生活用品",</span></span><br><span class="line"><span class="regexp">1.0,</span></span><br><span class="line"><span class="regexp">"迷森方格灰+精选unified"],</span></span><br><span class="line"><span class="regexp">["精选套餐B+学生宿舍基本生活用品",</span></span><br><span class="line"><span class="regexp">1.0,</span></span><br><span class="line"><span class="regexp">"Q夜华-绒+精选unified"],</span></span><br><span class="line"><span class="regexp">["精选套餐C+学生宿舍基本生活用品",</span></span><br><span class="line"><span class="regexp">1.0,</span></span><br><span class="line"><span class="regexp">"标准默认规格+精选unified"],</span></span><br><span class="line"><span class="regexp">["学生宿舍基本生活用品",</span></span><br><span class="line"><span class="regexp">1.0,</span></span><br><span class="line"><span class="regexp">"精选unified"]],</span></span><br><span class="line"><span class="regexp">"province":"宁夏",</span></span><br><span class="line"><span class="regexp">"div":"兴庆区",</span></span><br><span class="line"><span class="regexp">"Note":"测试支付逻辑",</span></span><br><span class="line"><span class="regexp">"city":"银川"</span></span><br><span class="line"><span class="regexp">&#125;,</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&#123;</span></span><br><span class="line"><span class="regexp">"songda_time":"2018.07.09",</span></span><br><span class="line"><span class="regexp">"mobile":"18800364312",</span></span><br><span class="line"><span class="regexp">"code":"QWE",</span></span><br><span class="line"><span class="regexp">"consignee":"李四",</span></span><br><span class="line"><span class="regexp">"building_number":"25",</span></span><br><span class="line"><span class="regexp">"school":"上海应用技术大学",</span></span><br><span class="line"><span class="regexp">"detailList":[["衬衫",</span></span><br><span class="line"><span class="regexp">1.0,</span></span><br><span class="line"><span class="regexp">"迷森方格灰"],</span></span><br><span class="line"><span class="regexp">["南极人短袖",</span></span><br><span class="line"><span class="regexp">1.0,</span></span><br><span class="line"><span class="regexp">"Q夜华"]],</span></span><br><span class="line"><span class="regexp">"province":"上海",</span></span><br><span class="line"><span class="regexp">"div":"奉贤区",</span></span><br><span class="line"><span class="regexp">"Note":"测试",</span></span><br><span class="line"><span class="regexp">"city":"上海"</span></span><br><span class="line"><span class="regexp">&#125;,</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&#123;</span></span><br><span class="line"><span class="regexp">"songda_time":"2109.07.09",</span></span><br><span class="line"><span class="regexp">"mobile":"13800359312",</span></span><br><span class="line"><span class="regexp">"code":"APM",</span></span><br><span class="line"><span class="regexp">"consignee":"王麻子",</span></span><br><span class="line"><span class="regexp">"building_number":"25",</span></span><br><span class="line"><span class="regexp">"school":"上海交通大学",</span></span><br><span class="line"><span class="regexp">"detailList":[["蚊香",</span></span><br><span class="line"><span class="regexp">1.0,</span></span><br><span class="line"><span class="regexp">"射手先生"]],</span></span><br><span class="line"><span class="regexp">"province":"上海",</span></span><br><span class="line"><span class="regexp">"div":"徐汇区",</span></span><br><span class="line"><span class="regexp">"Note":"测试支付逻辑",</span></span><br><span class="line"><span class="regexp">"city":"上海"</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">]</span></span><br><span class="line"><span class="regexp">var ta='&lt;table border="5" cellpadding="10px"&gt;'+</span></span><br><span class="line"><span class="regexp">'&lt;tr&gt;'+</span></span><br><span class="line"><span class="regexp">'&lt;th rowspan="2"&gt;省份&lt;/</span>th&gt;<span class="string">'+</span></span><br><span class="line"><span class="string">'</span>&lt;th rowspan=<span class="string">"2"</span>&gt;城市&lt;<span class="regexp">/th&gt;'+</span></span><br><span class="line"><span class="regexp">'&lt;th rowspan="2"&gt;区域&lt;/</span>th&gt;<span class="string">'+</span></span><br><span class="line"><span class="string">'</span>&lt;th rowspan=<span class="string">"2"</span>&gt;收件人&lt;<span class="regexp">/th&gt;'+</span></span><br><span class="line"><span class="regexp">'&lt;th rowspan="2"&gt;手机号&lt;/</span>th&gt;<span class="string">'+</span></span><br><span class="line"><span class="string">'</span>&lt;th rowspan=<span class="string">"1"</span> colspan=<span class="string">"3"</span>&gt;商品&lt;<span class="regexp">/th&gt;'+ &lt;!--colspan属性设置列跨度为3列--&gt;</span></span><br><span class="line"><span class="regexp">'&lt;th rowspan="2"&gt;学校&lt;/</span>th&gt;<span class="string">'+</span></span><br><span class="line"><span class="string">'</span>&lt;th rowspan=<span class="string">"2"</span>&gt;楼号&lt;<span class="regexp">/th&gt;'+</span></span><br><span class="line"><span class="regexp">'&lt;th rowspan="2"&gt;备注&lt;/</span>th&gt;<span class="string">'+</span></span><br><span class="line"><span class="string">'</span>&lt;th rowspan=<span class="string">"2"</span>&gt;送达时间&lt;<span class="regexp">/th&gt;'+</span></span><br><span class="line"><span class="regexp">'&lt;th rowspan="2"&gt;邀请码&lt;/</span>th&gt;<span class="string">'+</span></span><br><span class="line"><span class="string">'</span>&lt;<span class="regexp">/tr&gt;'+</span></span><br><span class="line"><span class="regexp">'&lt;tr&gt;'+</span></span><br><span class="line"><span class="regexp">'&lt;th&gt;名称&lt;/</span>th&gt;<span class="string">'+</span></span><br><span class="line"><span class="string">'</span>&lt;th&gt;属性&lt;<span class="regexp">/th&gt;'+</span></span><br><span class="line"><span class="regexp">'&lt;th&gt;数量&lt;/</span>th&gt;<span class="string">'+</span></span><br><span class="line"><span class="string">'</span>&lt;<span class="regexp">/tr&gt;'</span></span><br><span class="line"><span class="regexp">for(var i=0;i&lt;arr.length;i++)&#123;</span></span><br><span class="line"><span class="regexp">ta+= '&lt;tr&gt;'+</span></span><br><span class="line"><span class="regexp">'&lt;td rowspan='+arr[i].detailList.length+'&gt;'+arr[i].province+'&lt;/</span>td&gt;<span class="string">'+</span></span><br><span class="line"><span class="string">                    &lt;!--你要将标签中的属性拼接出来而不是简单的写成这样：&lt;td rowspan="arr[i].detailList.length"&gt;，如果你这样写的话浏览器是不会正确解析的--&gt;</span></span><br><span class="line"><span class="string">'</span>&lt;td rowspan=<span class="string">'+arr[i].detailList.length+'</span>&gt;<span class="string">'+arr[i].city+'</span>&lt;<span class="regexp">/td&gt;'+</span></span><br><span class="line"><span class="regexp">'&lt;td rowspan='+arr[i].detailList.length+'&gt;'+arr[i].div+'&lt;/</span>td&gt;<span class="string">'+</span></span><br><span class="line"><span class="string">'</span>&lt;td rowspan=<span class="string">'+arr[i].detailList.length+'</span>&gt;<span class="string">'+arr[i].consignee+'</span>&lt;<span class="regexp">/td&gt;'+</span></span><br><span class="line"><span class="regexp">'&lt;td rowspan='+arr[i].detailList.length+'&gt;'+arr[i].mobile+'&lt;/</span>td&gt;<span class="string">'+</span></span><br><span class="line"><span class="string">'</span>&lt;td rowspan=<span class="number">1</span><span class="string">"&gt;'+arr[i].detailList[0][0]+'&lt;/td&gt;'+</span></span><br><span class="line"><span class="string">'&lt;td rowspan=1"</span>&gt;<span class="string">'+arr[i].detailList[0][2]+'</span>&lt;<span class="regexp">/td&gt;'+</span></span><br><span class="line"><span class="regexp">'&lt;td rowspan=1"&gt;'+arr[i].detailList[0][1]+'&lt;/</span>td&gt;<span class="string">'+</span></span><br><span class="line"><span class="string">'</span>&lt;td rowspan=<span class="string">'+arr[i].detailList.length+'</span>&gt;<span class="string">'+arr[i].school+'</span>&lt;<span class="regexp">/td&gt;'+</span></span><br><span class="line"><span class="regexp">'&lt;td rowspan='+arr[i].detailList.length+'&gt;'+arr[i].building_number+'&lt;/</span>td&gt;<span class="string">'+</span></span><br><span class="line"><span class="string">'</span>&lt;td rowspan=<span class="string">'+arr[i].detailList.length+'</span>&gt;<span class="string">'+arr[i].Note+'</span>&lt;<span class="regexp">/td&gt;'+</span></span><br><span class="line"><span class="regexp">'&lt;td rowspan='+arr[i].detailList.length+'&gt;'+arr[i].songda_time+'&lt;/</span>td&gt;<span class="string">'+</span></span><br><span class="line"><span class="string">'</span>&lt;td rowspan=<span class="string">'+arr[i].detailList.length+'</span>&gt;<span class="string">'+arr[i].code+'</span>&lt;<span class="regexp">/td&gt;'+</span></span><br><span class="line"><span class="regexp">'&lt;/</span>tr&gt;<span class="string">' &lt;!--因为在字符串拼接中不可嵌套for循环，所以待渲染完同一个客户的第一个商品时（若购买的商品有多个，例如上面数组中的第一个detailList），重新拼接ta--&gt;</span></span><br><span class="line"><span class="string">for(var j=1;j&lt;arr[i].detailList.length;j++)&#123;</span></span><br><span class="line"><span class="string">ta+='</span>&lt;tr&gt;<span class="string">'+</span></span><br><span class="line"><span class="string">'</span>&lt;td rowspan=<span class="string">"1"</span>&gt;<span class="string">'+arr[i].detailList[j][0]+'</span>&lt;<span class="regexp">/td&gt;'+</span></span><br><span class="line"><span class="regexp">'&lt;td rowspan="1"&gt;'+arr[i].detailList[j][2]+'&lt;/</span>td&gt;<span class="string">'+</span></span><br><span class="line"><span class="string">'</span>&lt;td rowspan=<span class="string">"1"</span>&gt;<span class="string">'+arr[i].detailList[j][1]+'</span>&lt;<span class="regexp">/td&gt;'+</span></span><br><span class="line"><span class="regexp"> '&lt;/</span>tr&gt;<span class="string">'</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">ta+='</span>&lt;<span class="regexp">/table&gt;' &lt;!--拼接最后一个标签--&gt;</span></span><br><span class="line"><span class="regexp">document.getElementById("container").innerHTML = ta</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure><p><strong>如果你时初级JavaScript水平的话，看上面的代码可能会有点吃力，但不要着急，一步一步来，千万不要想着一口吃成胖子，其实渲染表格本质上是字符串的拼接。学会上述代码的话，你可以渲染任何规格的表格</strong></p><p>&lt;% alert success %&gt;</p><p>恭喜你学会了用JavaScript渲染复杂的表格！</p><p>&lt;% endalert %&gt;</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;我将告诉你如何用JavaScript渲染出比较复杂的表格&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://www.chilo-hzl.cn/categories/JavaScript/"/>
    
    
      <category term="表格" scheme="https://www.chilo-hzl.cn/tags/%E8%A1%A8%E6%A0%BC/"/>
    
  </entry>
  
  <entry>
    <title>将hexo部署到coding上</title>
    <link href="https://www.chilo-hzl.cn/2020/03/01/%E5%B0%86hexo%E9%83%A8%E7%BD%B2%E5%88%B0coding%E4%B8%8A/"/>
    <id>https://www.chilo-hzl.cn/2020/03/01/%E5%B0%86hexo%E9%83%A8%E7%BD%B2%E5%88%B0coding%E4%B8%8A/</id>
    <published>2020-03-01T12:21:56.000Z</published>
    <updated>2020-03-01T15:26:52.533Z</updated>
    
    <content type="html"><![CDATA[<!--excerpt--><h2 id="步骤如下"><a href="#步骤如下" class="headerlink" title="步骤如下"></a>步骤如下</h2><p><strong>1. 注册一个coding账号，这个步骤比较简单，团队的名字随便填，后面是可以更改的</strong></p><p><strong>2. 你可以看一下coding的官方文档中的静态网页的配置 <a href="https://help.coding.net/docs/devops/cd/static-website.html#pageTitle" target="_blank" rel="noopener">如何搭建hexo博客</a></strong></p><p><strong>3. 在新建项目后，点击项目设置，点击功能开关，并将所有的开关打开（最主要的还是构建与部署，因为这样你才能才代码仓库中看到静态网页，否则你是配置不了的）</strong></p><p><strong>4. 在自己电脑上配置coding的ssh验证，不会配置的请看<a href="https://help.coding.net/docs/project/features/ssh.html#pageTitle" target="_blank" rel="noopener">给coding配置ssh公钥</a> ，如果之前给GitHub配置过ssh公钥的，我建议coding不要使用ssh公钥（会出错，当然了也有相应的解决方案，大家可以自行查阅），应使用https的验证方法将博客推送到coding仓库，第一次推送要输入账户名和密码，后面的话电脑上的凭据管理器会记住账号和密码，下次就不用输入了，如果之前没有给GitHub配置过公钥的，可以给coding配置公钥，但不是绝对的，也可用https的验证方法（我的GitHub用的是https的验证方法，coding用的是ssh）。</strong></p><p><strong>5. 如果你的coding使用的是ssh验证方法，复制coding网站仓库的ssh，打开自己电脑上博客根目录的_config.yml文件，粘贴至<code>repo：</code>字段的后面（注意冒号后面要留有空格）</strong></p><p><strong>6. 在你的algolia控制台indices菜单栏中新建一个索引，并改动_config.yml文件中的<code>indexName:</code>字段后面的值，改为你新建的索引名</strong></p><p><strong>7. 在_config.yml文件中将URL更改为coding项目为你分配的URL</strong></p><p><strong>8. 在博客的根目录打开git bash执行下面的代码</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo algolia</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><div class="alert info"><p><strong>恭喜你大功告成！</strong></p></div><div class="alert danger"><p><strong>如果你想使一个段落粗体显示，那么在这一段结尾处与句尾星号之间不能留空格（有序列表也是如此），否则会渲染错误</strong></p></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;之前将博客部署到GitHub上，但是访问速度太慢了，所以我又将博客托管到了coding，在这篇博客中我将告诉你如何将博客网站托管到coding上&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="technology" scheme="https://www.chilo-hzl.cn/categories/technology/"/>
    
      <category term="hexo" scheme="https://www.chilo-hzl.cn/categories/technology/hexo/"/>
    
    
      <category term="hexo" scheme="https://www.chilo-hzl.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>如何搭建hexo博客</title>
    <link href="https://www.chilo-hzl.cn/2020/02/16/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/"/>
    <id>https://www.chilo-hzl.cn/2020/02/16/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-02-16T14:54:53.000Z</published>
    <updated>2020-03-01T14:23:06.719Z</updated>
    
    <content type="html"><![CDATA[<!--excerpt--><!--toc--><h3 id="首先在搭建之前，你应该具备以下知识"><a href="#首先在搭建之前，你应该具备以下知识" class="headerlink" title="首先在搭建之前，你应该具备以下知识"></a>首先在搭建之前，你应该具备以下知识</h3><p><strong>1.熟悉web前端技术（HTML,CSS,Javascript）</strong></p><p><strong>2.有Github账号，熟悉Github上面的操作</strong></p><p><strong>3.熟悉Git, 电脑上安装Git</strong></p><p><strong>4.有Node.js基础知识，电脑上安装Node.js,因为Hexo博客框架是基于Node.js写的</strong></p><p><strong>5.有安装npm软件包的相关知识</strong></p><p><strong>6.熟悉Hexo开发文档</strong></p><div class="alert info"><p><strong>如果你不熟悉上面内容，我建议你先学习上面内容，这样在搭建过程中如果遇到问题你可以通过控制台打印的信息快速找到自己在哪出错，并且下载模板后你完全可以根据自己的需求定制页面内容，做技术一定要知道所以然，而不是简单的copy</strong></p></div><h3 id="Git是分布式版本控制系统，Github是代码托管平台，下面超链接比较优质的内容，你可以查看"><a href="#Git是分布式版本控制系统，Github是代码托管平台，下面超链接比较优质的内容，你可以查看" class="headerlink" title="Git是分布式版本控制系统，Github是代码托管平台，下面超链接比较优质的内容，你可以查看"></a>Git是分布式版本控制系统，Github是代码托管平台，下面超链接比较优质的内容，你可以查看</h3><p><strong>1.这篇博文告诉你怎样注册Github账号，一些基本的Github操作，如何下载Git，如何初步使用Git：<a href="https://blog.csdn.net/tichimi3375/article/details/79844514" target="_blank" rel="noopener">网页链接</a></strong></p><p><strong>2.这个是Git操作的视频讲解，这个老师讲的很好，他后面课程中的Eclipse部分大家可以不用听，因为暂时用不到：<a href="https://www.bilibili.com/video/av59634634" target="_blank" rel="noopener">视频地址链接</a></strong></p><p><strong>3.这个是廖雪峰老师的Git讲解，你可以看一下：<a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noopener">网址链接</a></strong></p><p><strong>4.这篇文章讲述了Github的详细安装过程以及配置：<a href="https://blog.csdn.net/qq_37512323/article/details/80693445" target="_blank" rel="noopener">网址链接</a></strong></p><div class="alert warning"><p><strong>在这个过程中你可能会遇到一些专业术语，如果你查资料可以解决就ok,如果你查了好多资料还是一头雾水的话，你可以先放下，后续实践中你会慢慢理解的，还有大家不要怕出错，大不了从头再来，千万不要害怕。当然上述链接可能并不能满足你的需求，没关系，你要多百度。</strong></p></div><h3 id="Web前端技术"><a href="#Web前端技术" class="headerlink" title="Web前端技术"></a>Web前端技术</h3><p><strong>1.这个平台虽然比较老，但内容真的很优质，包括HTML，CSS，JavaScript以及其他的一些Web技术，上面每个都有实例，强烈推荐：<a href="https://www.w3school.com.cn/h.asp" target="_blank" rel="noopener">网址链接</a></strong></p><p><strong>2.这个视频使我首次接触到的Web前端技术，也是因为看来这个视频，我觉得Web前端技术很酷，很好玩，上面孙俏老师讲的很好：<a href="https://www.icourse163.org/course/BJFU-1003382003?tid=1003609002" target="_blank" rel="noopener">网址链接</a></strong></p><img src="/2020/02/16/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/web.jpg" class=""><h3 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h3><p><strong>1.初学者主要使用<code>npm install</code>命令安装依赖<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>比较多一点，这篇文章讲述了<code>npm install</code>的三个用法：<a href="https://www.cnblogs.com/ycg-myblog/p/10112217.html" target="_blank" rel="noopener">网址链接</a></strong></p><p><strong>2.大家也可以上NPM官网去看相关文档，对于初学者来说，了解什么是NPM是十分重要的：<a href="https://docs.npmjs.com/" target="_blank" rel="noopener">网址链接</a></strong></p><h3 id="现在正式开始搭建，我以tranquilpeak主题为例（操作系统为win10）"><a href="#现在正式开始搭建，我以tranquilpeak主题为例（操作系统为win10）" class="headerlink" title="现在正式开始搭建，我以tranquilpeak主题为例（操作系统为win10）"></a>现在正式开始搭建，我以tranquilpeak主题为例（操作系统为win10）</h3><p><strong>1.安装Hexo,使用<code>win+R</code>命令，在对话框中键入<code>cmd</code>打开CMD窗口，执行<code>npm install -g hexo-cli</code>安装Hexo，安装之后，在该CMD窗口中输入<code>hexo -v</code>,若出现下图所示样子，表明安装成功</strong></p><img src="/2020/02/16/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/peizhi2.jpg" class=""><p><strong>2.在你的D盘新建一个文件夹（可以是任意盘，不一定是D盘）命名成你想要的名字，我将它命名为myBlog,进入该文件夹，右击鼠标点击Git Bash Here,进入Git Bash命令行，输入<code>hexo init</code>,命令执行完成后再执行命令<code>npm install</code>安装依赖(在Git Bash页面没有进度条显示，请耐心等一两分钟)，再在此窗口执行<code>npm install hexo-deployer-git --save</code>(这个插件部署的时候要用，不然无法部署到Github仓库)，关闭Git Bash窗口，进入你博客文件夹的根目录，打开_config.yml文件，找到deploy字段，加入下列代码：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/chilo-hzl/chilo-hzl.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p><strong>请将上面的chilo-hzl/chilo-hzl.github.io字段修改成你自己的，在这个文件中继续修改，请修改title,description,author,url,url为你的博客url(例如我的是：<a href="https://chilo-hzl.github.io/" target="_blank" rel="noopener">https://chilo-hzl.github.io/</a> )，点击 <a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak/blob/master/DOCUMENTATION.md" target="_blank" rel="noopener">网址链接</a>  查看主题作者的配置指导继续配置，内容是英文，如果你英语不好的话，我建议你用谷歌翻译，在Language configuration中，打开tranquilpeak的languages文件夹，找到author字段（在页面尾部）键入bio和job的值 （这两个值将会在你头像下显示）。主题作者写的配置文件比较详细，我把一些作者说的不太清楚的再说一下，再把我踩的坑说一下，还有一些大家暂时用不到的配置说一下:</strong></p><p><strong>a. 在博客根目录_config_yml中的<code>plugins</code>字段要写成<code>Plugins</code>，不然<code>hexo s</code>命令会出错</strong></p><p><strong>b. 按照配置文档配置主题时顺序不能乱，否则会出现严重错误（比如一个字段本应该在A页面显示，却在B页面显示）</strong></p><p><strong>c. Google Analytics和Modifying the theme这两个你刚开始搭建的时候暂时不要动，等你把这个主题的代码研究差不多的时候你再做配置和修改</strong></p><p><strong>d. 在搭建的时候遇到问题首先检查自己是否安装了相关插件，如果还不能解决的话上Github的issues查看是否有关于该问题的解决方案，其次再百度，如果还是不能解决的话，你可以在Github的issues页面对主题作者提问，一般的话他都会回复你，发现主题BUG的话你也可以对他open issue.</strong></p><p><strong>e. 写博客的时候如果用到引用标签（类似标签都是这样）的话要注意：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># one</span></span><br><span class="line">&#123;% blockquote david %&#125;block1&#123;% endblockquote %&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">## two  &lt;!--这一行会解析错误--&gt;</span></span><br><span class="line">&#123;% blockquote frank %&#125;block2&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># one</span></span><br><span class="line">&#123;% blockquote david %&#125;</span><br><span class="line">block1</span><br><span class="line">&#123;% endblockquote %&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">## two  &lt;!--这样写的话这一行才会正确解析（这跟Hexo的渲染库函数有关）--&gt;</span></span><br><span class="line">&#123;% blockquote frank %&#125;</span><br><span class="line">block2</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><p><strong>f. 用Typora编辑器写完代码块后应选择语言，不然行号显示不出来</strong></p><p><strong>g. 在博客根目录_config.yml文件中配置algolia要注意：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">algolia:</span><br><span class="line">  appId: "你的appId,在algolia控制台中将它粘贴到这里"</span><br><span class="line">  apiKey: "你的apiKey,在algolia控制台中将它粘贴到这里"</span><br><span class="line">  adminApiKey: "你的adminApiKey,在algolia控制台中将它粘贴到这里"</span><br><span class="line">  chunkSize: 5000 <span class="xml"><span class="comment">&lt;!--每个批次上传到algolia服务器的博客数（当博客数量较多时hexo会分批上传到algolia服务器）--&gt;</span></span></span><br><span class="line">  indexName: "你的博客在algolia上的索引名" <span class="xml"><span class="comment">&lt;!--索引由记录构成，单个记录相当于一篇博客中要检索的字段--&gt;</span></span></span><br><span class="line">  fields: <span class="xml"><span class="comment">&lt;!--在单个记录上的键值对，起到博客可搜索的作用--&gt;</span></span></span><br><span class="line"><span class="bullet">    - </span>content:strip:truncate,0,500 <span class="xml"><span class="comment">&lt;!--爬虫抓取文章的前500字与你输入的字段进行比较，值越小，搜索速度越快（搜索的字段为内容中的字段时）--&gt;</span></span></span><br><span class="line"><span class="bullet">    - </span>excerpt <span class="xml"><span class="comment">&lt;!--摘录部分的值，不能用excerpt:strip的用法，用的话在检索后会出现undefined（但是不影响检索文章）,具体原因我还没有搞清楚--&gt;</span></span></span><br><span class="line"><span class="bullet">    - </span>permalink</span><br><span class="line"><span class="bullet">    - </span>thumbnailImageUrl <span class="xml"><span class="comment">&lt;!--索引图片的URL--&gt;</span></span></span><br><span class="line"><span class="bullet">    - </span>categories</span><br><span class="line"><span class="bullet">    - </span>tags</span><br><span class="line"><span class="bullet">    - </span>title</span><br><span class="line"><span class="bullet">    - </span>date</span><br></pre></td></tr></table></figure><p><strong>h. 将内容推送到远端仓库时执行下面的代码</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &lt;!--清除本地的缓存--&gt;</span><br><span class="line">hexo g &lt;!--扫描文件目录，生成public文件夹--&gt;</span><br><span class="line">hexo s &lt;!--这一步将本地端作为服务器，在本地端口看生成了网页，起到一个预览的作用（这一步可以省略）--&gt;</span><br><span class="line">hexo algolia &lt;!--将文件要检索的字段上传至algolia服务器，这样你才能在自己的网站上搜索自己的文章--&gt;</span><br><span class="line">hexo d &lt;!--将文件目录上传至远端仓库--&gt;</span><br></pre></td></tr></table></figure><p><strong>剩下的话应该不是问题，你只要按照主题作者的配置文件一步步来，你应该可以正常搭建出来的，但是每个人的情况可能不一样，但不要怕，大不了从头再来，多试几次就好了。</strong></p><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">在软件开发过程中，程序是模块化的，每个人开发程序的一部分，假如有一个程序模块由A,B开发,有一个程序模块由C来开发，只有C把A和B开发的代码块放入自己的程序中，结合C自己开发的代码块，C自己的程序模块才能正常运行，相对C而言，A代码块和B代码块就是C代码块的依赖.</span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;在这篇博客中我将告诉你如何搭建属于自己的hexo博客网站&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="technology" scheme="https://www.chilo-hzl.cn/categories/technology/"/>
    
      <category term="hexo" scheme="https://www.chilo-hzl.cn/categories/technology/hexo/"/>
    
    
      <category term="hexo" scheme="https://www.chilo-hzl.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>免费福利</title>
    <link href="https://www.chilo-hzl.cn/2020/02/13/%E5%85%8D%E8%B4%B9%E7%A6%8F%E5%88%A9/"/>
    <id>https://www.chilo-hzl.cn/2020/02/13/%E5%85%8D%E8%B4%B9%E7%A6%8F%E5%88%A9/</id>
    <published>2020-02-13T15:14:11.000Z</published>
    <updated>2020-02-28T13:57:47.927Z</updated>
    
    <content type="html"><![CDATA[<!--excerpt--><h2 id="1-看电影"><a href="#1-看电影" class="headerlink" title="1.看电影"></a>1.看电影</h2><h3 id="如果你想看的电影是会员的、院线电影或付费的，你可以使用下列方式免费观看"><a href="#如果你想看的电影是会员的、院线电影或付费的，你可以使用下列方式免费观看" class="headerlink" title="如果你想看的电影是会员的、院线电影或付费的，你可以使用下列方式免费观看"></a>如果你想看的电影是会员的、院线电影或付费的，你可以使用下列方式免费观看</h3><p><strong>1.1 关注公众号“新羊皮卷经典”，在公众号里看</strong></p><p><strong>1.2 用浏览器在线观看：<a href="http://www.top6300.top/" target="_blank" rel="noopener">首页链接</a></strong></p><div class="alert info"><p><strong>我强烈推荐你使用浏览器观看，尤其是谷歌浏览器，在公众号里面看有卡顿</strong></p></div><h2 id="2-下载电影"><a href="#2-下载电影" class="headerlink" title="2.下载电影"></a>2.下载电影</h2><p><strong>你可以使用迅雷从这个网站上免费下载电影 <a href="http://www.8080s.net/" target="_blank" rel="noopener">首页链接</a></strong></p><h2 id="3-下载软件"><a href="#3-下载软件" class="headerlink" title="3.下载软件"></a>3.下载软件</h2><p><strong>有一些专业软件是收费的，所以我们大多数情况使用破解版，但是一些破解版却包含病毒常常使我们痛苦不堪，这个公众号是我见过的最良心的公众号，软件种类多（有操作系统、CAD系列、PS系列、AE系列、PR系列、3d MAX系列、office系列），总之应有尽有，并且它还提供了特别详细的安装步骤</strong></p><p><b>搜索微信公众号：</b><span class="highlight-text green">软件安装管家</span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;我整理了一些有用的资源，这些资源我自己也经常用，希望这些资源能帮助到你！&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="life" scheme="https://www.chilo-hzl.cn/categories/life/"/>
    
    
      <category term="life" scheme="https://www.chilo-hzl.cn/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>个人简介</title>
    <link href="https://www.chilo-hzl.cn/2020/02/13/%E4%B8%AA%E4%BA%BA%E7%AE%80%E4%BB%8B/"/>
    <id>https://www.chilo-hzl.cn/2020/02/13/%E4%B8%AA%E4%BA%BA%E7%AE%80%E4%BB%8B/</id>
    <published>2020-02-13T14:49:09.000Z</published>
    <updated>2020-02-14T10:59:20.418Z</updated>
    
    <content type="html"><![CDATA[<!--excerpt--><h2 id="偶像"><a href="#偶像" class="headerlink" title="偶像"></a>偶像</h2><ol><li><p><strong>Bill Gates</strong></p></li><li><p><strong>李彦宏</strong></p></li><li><p><strong>孙正义</strong></p></li></ol><hr><h2 id="爱好"><a href="#爱好" class="headerlink" title="爱好"></a>爱好</h2><h3 id="sport"><a href="#sport" class="headerlink" title="sport"></a>sport</h3><ol><li><strong>打篮球</strong></li><li><strong>打乒乓球</strong></li><li><strong>打羽毛球</strong></li></ol><h3 id="etc"><a href="#etc" class="headerlink" title="etc"></a>etc</h3><ul><li><strong>听音乐</strong></li><li><strong>看电影</strong></li><li><strong>吃美食</strong></li><li><strong>学英语</strong></li></ul><hr><h2 id="喜欢的人"><a href="#喜欢的人" class="headerlink" title="喜欢的人"></a>喜欢的人</h2><ol><li><strong>江疏影</strong></li><li><strong>刘雯</strong></li><li><strong>杨磊</strong></li></ol><hr><h2 id="喜欢的话"><a href="#喜欢的话" class="headerlink" title="喜欢的话"></a>喜欢的话</h2><ul><li><strong>You’re like a battery,charging in university,discharging at work.</strong></li><li><strong>当你停下来休息的时候不要忘记别人还在奔跑。</strong></li><li><strong>失败并不可怕，害怕失败才真正可怕。</strong></li></ul><hr><h2 id="character"><a href="#character" class="headerlink" title="character"></a>character</h2><ul><li><strong>rational</strong></li><li><strong>perceptual</strong></li><li><strong>serious(work)</strong></li><li><strong>funny(life)</strong></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;你可以通过这篇博客来了解我&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="life" scheme="https://www.chilo-hzl.cn/categories/life/"/>
    
    
      <category term="about me" scheme="https://www.chilo-hzl.cn/tags/about-me/"/>
    
  </entry>
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="https://www.chilo-hzl.cn/2020/02/12/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>https://www.chilo-hzl.cn/2020/02/12/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-02-12T09:26:32.000Z</published>
    <updated>2020-02-27T14:14:54.124Z</updated>
    
    <content type="html"><![CDATA[<p><strong>想做一个自己的网站在脑子里已经好久了，但是太忙了，所以这个网站只停留在自己的脑海里 ，前不久把自己开发的一款的小程序终于开发完了，又把c++不会的点梳理了一遍，最近我就把我的主要时间放到了搭建这个博客网站上。</strong></p><br/><a id="more"></a><p><strong>开始的时候并不是很容易的，也不知道用哪个博客框架来搭建，也不确定自己是否要购买服务器，在一次的偶然的情况下，我在GitHub上看到了别人用hexo搭建博客，我顿时来了兴趣，查阅了好多相关知识，发现用hexo搭建不用服务器，并且相应的主题样式比较多，把开发文档看了一遍，又看了好多别人的搭建过程，于是自己动起手来搭建，当然这个过程并不是一帆风顺的，一边出错一边查资料，心里想着出错了大不了从头再来，一步步地终于键入网址能看到自己网站的雏形了，可是这还远远不够，你要把相关的图标、内容修改成切合自己的，你还要学习markdown的语法，学习typora的用法，又折腾了好长时间，终于把样式和功能完善和补充后开始写我的第一篇博客。真的很开心。</strong></p><br/><img src="/2020/02/12/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/1_chatu1.jpg" class="" title="chatu1"><br/><p><strong>怎么说呢，当你把一件很有意义的做完之后这种快感真的无法用语言形容的，这个过程很痛苦，就拿我开发小程序的时候来说吧，刚开始的时候好多不会，晚上做梦都在想这个步骤怎么做，哈哈，都有点走火入魔的感觉，当最后我把它提交上线时，那一刻真的是五味杂陈，很激动，很开心，很感动，自己成长了不少，我从19年四月份开始接手，一有时间就扑到这个项目上，中间也试着找个合伙人，但是因为薪资关系没有谈拢，自己就只好一个人开发，到十一月份的时候，第一代体验版终于可以正常运行起来。</strong></p><blockquote><p>真正的快乐并非来自财富或赞誉，而是来自于做了一些值得做的事情。</p><p>————[英国]格伦费尔</p></blockquote><p><strong>当然现在的自己不比以前，以前自己有个毛病，学一些比较难的东西时就学不下去，老是这样，后来，我对自己说，你可以先试着研究它一个星期，如果一个星期还弄不明白，你再放弃也不迟啊，我慢慢培养自己这种想法，感觉很好，其实眼前的困难并不是那么难以对付的嘛，果然一个眼前想不出怎么解决的问题经过三四天的思考便有了解决它的方案，令人神清气爽。想到中国合伙人的一句话：那些从一开始就放弃的人他不会失败，因为他从一开始就失败了。所以自己也学着一开始不要放弃，先做着试一试，把一个很大的任务小块化，一步步地去解决。</strong></p><br/><p><strong>当然另一方面也是觉得有一个自己的博客很酷，很好玩，很有意义，以前关于“学得越多，不知道的也越多”这句话没有什么感触，现在愈来愈感觉到这句话的重要性了。但是我坚信自己会克服种种困难，达到自己期望的结果，怎么说呢，我是一个有双重性格的人，生活上很逗比，比较随和一点，但工作上却不容许有瑕疵，但是我觉得这样也挺好，至少这也是遵循自己内心的想法。</strong></p><br/><p><strong>大家如果碰到一些比较有意义，但比较困难，自己想做却又不敢做的事，千万不要胆怯，假如做一件事不费任何代价就能完成的事，至少对我来说，并没有什么感到骄傲的，但如果自己花很大功夫去搞定的事，我会兴奋半天，那种感觉太棒了，所以我鼓励大家去挑战那些困难却又值得挑战的事。愿未来的你不畏前行，不悔于心。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;想做一个自己的网站在脑子里已经好久了，但是太忙了，所以这个网站只停留在自己的脑海里 ，前不久把自己开发的一款的小程序终于开发完了，又把c++不会的点梳理了一遍，最近我就把我的主要时间放到了搭建这个博客网站上。&lt;/strong&gt;&lt;/p&gt;
&lt;br/&gt;
    
    </summary>
    
    
      <category term="life" scheme="https://www.chilo-hzl.cn/categories/life/"/>
    
    
      <category term="life" scheme="https://www.chilo-hzl.cn/tags/life/"/>
    
  </entry>
  
</feed>
